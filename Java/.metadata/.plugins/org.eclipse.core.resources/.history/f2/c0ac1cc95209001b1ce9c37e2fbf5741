package com.vti.exercise_5;


public class test_E4 {
	public static void main(String[] args) {
	// Question 2: Ti·∫øp t·ª•c Question 1
		// X√¢y d·ª±ng l·ªõp QLCB(qu·∫£n l√Ω c√°n b·ªô) c√†i ƒë·∫∑t c√°c ph∆∞∆°ng th·ª©c th·ª±c hi·ªán c√°c ch·ª©c nƒÉng sau:
			//a) Th√™m m·ªõi c√°n b·ªô.
			//b) T√¨m ki·∫øm theo h·ª? t√™n.
			//c) Hi·ªán th·ªã th√¥ng tin v·ª? danh s√°ch c√°c c√°n b·ªô.
			//d) Nh·∫≠p v√†o t√™n c·ªßa c√°n b·ªô v√† delete c√°n b·ªô ƒë√≥
			//e) Tho√°t kh·ª?i ch∆∞∆°ng tr√¨nh.
//		CanBo canbo1 = new CanBo();
//		System.out.println(canbo1);
	
		
		
		
		
		
		
		
		
		
		
		// Question 1: abstract class & abstract method
				//		T·∫°o 1 class Phone ƒë·ªÉ l∆∞u th√¥ng tin li√™n l·∫°c, trong Phone c√≥ ch·ª©a 1
				//		property c√≥ ki·ªÉu d·ªØ li·ªáu l√† Array contacts, trong t·ª´ng contact c√≥ l∆∞u
				//		th√¥ng tin number, name
				//		a) T·∫°o c√°c abstract method
				//		a. void insertContact(String name, String phone)
				//		b. void removeContact(String name)
				//		c. void updateContact(String name, String newPhone)
				//		d. void searchContact(String name)
				//		b) T·∫°o class VietnamesePhone k·∫ø th·ª´a Phone v√† tri·ªÉn khai c√°c
				//		method abstract
				//		Vi·∫øt ch∆∞∆°ng tr√¨nh demo
		
}
}
